@model Battleships.Core.ViewModels.LobbyViewModel
@{
    ViewBag.Title = "Lobby";
}
<h2>Lobby</h2>
<div class="row justify-content-md-center">
    <div class="navbar col-md-2 d-none d-md-block ">
        <div class="bg-dark pt-2" id="people-list">
            <!-- User list -->
            @{Html.RenderPartial("_UserList", Model.UserList); }
            <!--end user list -->
        </div>
    </div>
    <main class="col-md-8 ml-sm-auto col-lg-10 px-4 pt-2 ">
        <div class="chat pb-2 ">
            <div class="chat-header clearfix">
                <div class="chat-about">
                    <div class="chat-with">Public Chat</div>
                </div>
                <i class=""></i>
            </div> <!-- end chat-header -->
            <div class="chat-history">
                <ul id="chat-body"></ul>
            </div>
            <div class="chat-message clearfix">
                <div class="write-form">
                    <textarea id="message" placeholder="Type your message" rows="2"></textarea>
                </div>
                <div class="text-center  ">
                    <button class=" btn btn-info" id="sendmessage">Send</button>
                </div>

            </div> <!-- end chat-message -->
        </div> <!-- end chat -->
    </main>
</div>

<!--Wait modal-->
<div id="waitModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header ">
                <button type="button" class="close" onclick="cancelInvitation('challengedUser')" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                <p>Waiting for a response from <span id="challengedUser"></span></p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" onclick="cancelInvitation('challengedUser')" class="btn btn-danger" data-dismiss="modal">Cancel invitation</button>
            </div>
        </div>

    </div>
</div>

<!--challenge Modal -->
<div id="challengeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header ">
                <button type="button" class="close" onclick="battleAnswer(false, 'challengerName')" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                <p><span id="challengerName"></span> challenges you to play. Do you accept?</p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" onclick="battleAnswer(true ,  'challengerName' )" class="btn btn-success" data-dismiss="modal">Accept</button>
                <button type="button" onclick="battleAnswer(false , 'challengerName')" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>

    </div>
</div>

<!--canceled Modal -->
<div id="canceledModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header ">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                <p>Enemy cancelled his invitation</p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<!--declined Modal -->
<div id="declinedModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header ">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                <p>Enemy declined the challenge</p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>


@section scripts {
    <!--Script references. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.lobbyHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                 if (name == "@Model.CurrentUser") {
                     $('#chat-body').append('<li><strong><span class="float-right">:' + htmlEncode(name)
                         + '</span></strong><div class="this-user talk-bubble tri-right left-in">' +
                        ' <div class="talktext"><span class="word-wrap">' + htmlEncode(message) + '</span></div>' +
                        '</div ></li > ');
                } else {
                     $('#chat-body').append('<li><strong><span class="float-left">' + htmlEncode(name)
                         + ':</span></strong> <div class="other-user talk-bubble tri-right left-in">' +
                        ' <div class="talktext"><span class="word-wrap">' + htmlEncode(message) + '</span></div>' +
                        '</div ></li > ');
                }
             };
            chat.client.logInUser = function (id) {
                $("#chat_user_" + id).prependTo($(".list"));
                $("#status-icon-" + id).removeClass("offline").addClass("online");
                $("#status-user-" + id).html("online");
                $("#battle-btn-" + id).show();
                chat.server.feedback(displayName, id);
            };
            chat.client.logOutUser = function (id) {
                $("#chat_user_" + id).prependTo($(".list"));
                $("#status-icon-" + id).removeClass("online").addClass("offline");
                $("#status-user-" + id).html("offline");
                $("#battle-btn-" + id).hide();
            };
            chat.client.acceptChallenge = function () {
                console.debug("Fight begins")
                $('#waitModal').modal('hide')
                // to do redirect to fight
            }

            chat.client.declineChallenge = function () {
                $('#waitModal').modal('hide')
                $('#declinedModal').modal('show')
            }

            chat.client.informAboutCanceling = function () {
                $('#challengeModal').modal('hide')
                $('#canceledModal').modal('show')

            }

            chat.client.openChallengeDialog = function (challenger) {
                $("#challengerName").html(challenger)
                $('#challengeModal').modal('show')
            }

            // Get the user name and store it to prepend to messages.
             var displayName = "@Model.CurrentUser"
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    if ($('#message').val().length != 0) {
                        chat.server.send(displayName, $('#message').val());
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                    }
                });
                challengeToFight = function (challengedUser) {
                    $("#challengedUser").html(challengedUser);
                    chat.server.challengeToBattle(challengedUser, "@Model.CurrentUser");
                };

                battleAnswer = function (decision, callerId) {
                    destination = $("#" + callerId).html();
                    console.debug(destination);
                    chat.server.battleAnswer(decision, destination);
                    if (decision) {
                        console.debug("Fight begins")
                        $('#challengeModal').modal('hide')
                    }
                };

                cancelInvitation = function (callerId) {
                    destination = $("#" + callerId).html();
                    console.debug(destination);
                    chat.server.cancelInvitation(destination);
                };

            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

